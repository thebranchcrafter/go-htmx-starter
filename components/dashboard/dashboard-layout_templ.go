// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func DashboardLayout(mainContent templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" class=\"h-full\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Dashboard</title><script src=\"https://unpkg.com/htmx.org@1.9.0\"></script><script src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\" defer></script><link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\"><link href=\"https://cdn.jsdelivr.net/npm/daisyui@1.14.0/dist/full.css\" rel=\"stylesheet\"></head><body class=\"h-full bg-base-200\"><!-- Dashboard Layout --><div class=\"min-h-full flex\" x-data=\"{ sidebarOpen: true }\"><!-- Sidebar --><aside class=\"bg-base-100 w-64 p-4 shadow-lg transition-all duration-300 ease-in-out transform\" :class=\"{ &#39;-ml-64&#39;: !sidebarOpen, &#39;ml-0&#39;: sidebarOpen }\"><div class=\"flex items-center justify-between mb-6\"><h2 class=\"text-xl font-bold text-primary\">Dashboard</h2></div><ul class=\"menu\"><li><a class=\"hover:bg-primary/10 active:bg-primary/20\" hx-get=\"/dashboard\" hx-target=\"#main-content\" hx-push-url=\"true\">Dashboard</a></li><li><a class=\"hover:bg-primary/10 active:bg-primary/20\" hx-get=\"/user-settings\" hx-target=\"#main-content\" hx-push-url=\"true\">User settings</a></li><li><a class=\"hover:bg-primary/10 active:bg-primary/20\">Orders</a></li><li><a class=\"hover:bg-primary/10 active:bg-primary/20\">Customers</a></li><li><a class=\"hover:bg-primary/10 active:bg-primary/20\">Settings</a></li></ul></aside><!-- Main Content --><div class=\"flex-1 flex flex-col\"><!-- Header --><header class=\"navbar bg-base-100 shadow-lg\"><div class=\"flex-1\"><button class=\"btn btn-ghost\" @click=\"sidebarOpen = !sidebarOpen\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg></button> <a class=\"btn btn-ghost normal-case text-xl\">Dashboard</a></div><div class=\"flex-none gap-2\"><div class=\"form-control\"><input type=\"text\" placeholder=\"Search\" class=\"input input-bordered\"></div><div class=\"dropdown dropdown-end\" x-data=\"{ open: false }\"><button class=\"btn btn-ghost\" @click=\"open = !open\"><div class=\"avatar\"><div class=\"w-10 rounded-full\"><img src=\"https://placekitten.com/200/200\" alt=\"Profile\"></div></div></button><ul class=\"menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52\" x-show=\"open\" @click.away=\"open = false\"><li><a>Profile</a></li><li><a>Settings</a></li><li><a>Logout</a></li></ul></div></div></header><main id=\"main-content\" class=\"flex-1 p-12 bg-base-200 overflow-y-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = mainContent.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</main></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
